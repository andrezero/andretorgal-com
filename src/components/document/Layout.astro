---
export type Props = {
    free?: boolean;
};

const hasSection = Astro.slots.has('section');

const { free } = Astro.props;
---

<div class:list={['layout', { 'has-section': hasSection, contained: !free }]}>
    <div class="layout-header">
        <slot name="header" />
    </div>
    <div class="layout-section">
        <slot name="section" />
    </div>
    <div class="layout-main">
        <slot name="main" />
    </div>
    <div class="layout-footer">
        <slot name="footer" />
    </div>
</div>

<style is:global>
    .container {
        margin: 0 var(--layout-gutter);
    }

    .layout-section {
        display: none;
    }

    .has-section .layout-section {
        display: block;
    }

    @media screen {
        .layout {
            display: grid;
            grid-template-columns: 1fr;
            grid-template-areas:
                'head'
                'sect'
                'main'
                'foot';
            height: 100%;
        }

        .layout-header {
            grid-area: head;
        }

        .layout-section {
            grid-area: sect;
        }

        .layout-main {
            grid-area: main;
        }

        .layout-footer {
            grid-area: foot;
        }
    }

    @media screen and (min-width: 1060px) {
        .layout {
            grid-template-areas:
                'head main'
                'foot foot';
            grid-template-columns: var(--layout-col-1) 1fr;
            max-width: initial;

            --layout-footer-shift: var(--layout-col-1) + var(--layout-border-wide);
        }

        .has-section {
            grid-template-areas:
                'head sect'
                'head main'
                'foot foot';
        }
    }

    @media screen and (min-width: 1420px) {
        .layout {
            grid-template-areas:
                'head main'
                'foot foot';
            grid-template-columns: var(--layout-col-1) 1fr;
            grid-template-rows: repeat(2, min-content);
        }

        .has-section {
            grid-template-areas:
                'head sect main'
                'foot foot foot';
            grid-template-columns: var(--layout-bi-col-1) var(--layout-bi-col-2) 1fr;
            grid-template-rows: repeat(2, min-content);

            --layout-footer-shift: var(--layout-bi-col-1) + var(--layout-bi-col-2) +
                var(--layout-border-wide);
        }

        .has-section .layout-section {
            display: block;
        }
    }

    @media print {
        .layout > * {
            color: var(--print-fg);
            background-color: transparent;
        }
    }
</style>
