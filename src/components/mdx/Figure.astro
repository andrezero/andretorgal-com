---
import type { ImageProps } from '@integration/images/types';

import Image from './Image.astro';
import { resolveFigureProps } from './helpers';

export type Props = ImageProps;

const { width: propWidth, height: propHeight } = Astro.props;

const {
    src,
    alt,
    title,
    attribution,
    width: titleWidth,
    height: titleHeight,
} = await resolveFigureProps(Astro.props);

const bgColor = '#414141';
const showLabel = !!title || !!attribution;
const imageProps = {
    src,
    alt,
    width: propWidth || titleWidth,
    height: propHeight || titleHeight,
};
---

<figure class="figure">
    <span class="block">
        <span class="frame" style={{ 'background-color': bgColor }}>
            <Image {...imageProps} />
        </span>
    </span>
    {
        showLabel && (
            <figcaption class="cs-primary">
                {title}
                {attribution && (
                    <span>
                        {attribution.text}
                        {attribution?.link && (
                            <a data-external href={attribution.link}>
                                Visit site
                            </a>
                        )}
                    </span>
                )}
            </figcaption>
        )
    }
</figure>

<style>
    .figure {
        display: flex;
        flex-direction: column;
    }

    .block {
        display: flex;
        position: relative;
    }

    .frame {
        width: 100%;
    }

    figcaption {
        display: flex;
        flex-direction: column;
        align-self: start;
    }

    figcaption span {
        padding-top: var(--layout-s-quarter);
        font-size: var(--t-type-size--2);
        font-style: italic;
    }

    @media screen {
        figcaption {
            background: var(--scheme-muted);
            color: var(--scheme-fg);
            padding: var(--layout-s-quarter);
        }

        .frame::before {
            z-index: 0;
            position: absolute;
            display: block;
            content: ' ';
            width: 100%;
            height: 100%;
            border: var(--layout-shift) solid var(--scheme-muted);
        }
    }
    @media print {
        .figure {
            break-inside: avoid;
            padding: var(--layout-unit);
            border: var(--layout-shift) solid var(--print-edge);
        }

        figcaption {
        }
    }
</style>

<style is:global>
    .figure picture {
        position: relative;
        z-index: 1;
        width: 100%;
        min-height: 100%;
    }

    .figure picture img {
        width: 100%;
        min-height: 100%;
        height: 100%;
        color: transparent;
        background-color: transparent;
    }
</style>
