---
export type Props = {
    href: string;
    exact?: boolean;
    label?: string;
    inline?: boolean;
};

const { href, exact, label, inline } = Astro.props;

const { pathname } = Astro.url;
const current = pathname.replace(/\/$/, '');
const isHome = href === '/';
const isActive = isHome
    ? pathname === '/'
    : exact
    ? current === href
    : current.startsWith(href + '');
const tabIndex = isActive ? -1 : 0;
---

<a
    tabindex={tabIndex}
    href={href}
    class:list={['nav', { active: isActive, inline }]}
    aria-label={label}
    aria-current={isActive ? 'true' : undefined}><slot /></a
>

<style>
    .nav {
        display: inline-block;
        line-height: inherit;
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        font-family: var(--t-type-family-nav);
        text-overflow: ellipsis;
        overflow: hidden;
    }

    .inline {
        display: inline;
    }

    .nav {
        padding: 0 var(--layout-shift) 0;
        text-decoration: underline;
    }

    @media (prefers-reduced-motion: reduce) {
        .nav {
            transition: none;
        }
    }

    .nav:hover {
        color: var(--scheme-bg);
        background-color: var(--scheme-a-on);
    }

    .nav.active {
        text-decoration: none;
        color: var(--scheme-bg);
        background-color: var(--scheme-fg);
    }

    .nav:active {
        text-decoration: none;
        color: var(--scheme-fg);
        background-color: var(--scheme-bg);
    }
</style>
