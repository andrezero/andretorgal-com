---
import { type BaseNode, getNodeThumbImage } from '@nodes/index';

import { NodeAbstract, NodeDate, NodeTags, NodeThumb, TagLink } from '../parts';

export type CardVariant = 'full' | 'compact';

export type Props = {
    node: BaseNode;
    variant?: CardVariant | undefined;
};

const SHOW_DATE = ['post'];
const SHOW_TAGS = ['post', 'meta', 'page'];

const { node, variant = 'full' } = Astro.props;

const showDate = SHOW_DATE.includes(node.type);
const showTags = SHOW_TAGS.includes(node.type);

const thumbImage = getNodeThumbImage(node);

const maxChars = thumbImage && variant === 'compact' ? 100 : undefined;
---

<article class:list={[variant]}>
    <header>
        <h3>
            {
                node.type === 'tag' ? (
                    <TagLink tag={node.title} size="large">
                        {node.title}
                    </TagLink>
                ) : (
                    <a href={node.url}>{node.title}</a>
                )
            }
        </h3>
        {showDate && <NodeDate size="s" node={node} />}
    </header>
    {
        thumbImage && (
            <a href={node.url}>
                <NodeThumb node={node} />
            </a>
        )
    }
    <NodeAbstract node={node} variant="compact" max={maxChars} />
    {showTags && <NodeTags node={node} />}
</article>

<style>
    article {
        display: flex;
        flex-direction: column;
        gap: var(--gap-h-s);
    }

    header {
        display: flex;
        flex-direction: column-reverse;
        gap: var(--t-space-2xs);
    }

    div {
        display: flex;
        gap: var(--gap-h-s);
        flex-direction: column;
    }

    @media screen and (min-width: 650px) {
        div {
            display: grid;
            gap: var(--gap-h-m);
            grid-template-columns: 50% auto;
        }
    }

    p {
        font-size: var(--t-type-size-0);
    }
</style>
