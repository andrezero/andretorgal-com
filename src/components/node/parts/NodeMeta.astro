---
import type { BaseNode } from '@queries/types';
import { shortDate } from '@utils/date';
import NodeTags from './NodeTags.astro';

export type Props = {
    node: BaseNode;
};

const { node } = Astro.props;
const { type = 'page', url, published, updated, tags } = node;

const publishedDate = published && new Date(published);
const updatedDate = updated && new Date(updated);
const show = publishedDate || (tags && tags.length);
---

{
    show && (
        <div class:list={{ published: !!publishedDate, updated: !!updatedDate }}>
            <p>
                <span>This {type} was</span>{' '}
                {publishedDate && (
                    <span class="published">
                        published on
                        <a href={url} class="node-permalink">
                            <time class="date" datetime={publishedDate.toISOString()}>
                                {shortDate(publishedDate)}
                            </time>
                        </a>
                    </span>
                )}
                {updatedDate && (
                    <span class="updated">
                        {publishedDate && 'and'}
                        last updated on
                        <a href={url} class="node-permalink">
                            <time class="date" datetime={updatedDate.toISOString()}>
                                {shortDate(updatedDate)}
                            </time>
                        </a>
                    </span>
                )}
            </p>
            <NodeTags node={node} />
        </div>
    )
}

<style>
    div {
        font-size: var(--t-type-size--1);
    }

    p {
        margin-bottom: var(--layout-gap);
    }

    a {
        display: inline-flex;
    }

    ul,
    li {
        display: inline;
    }

    li {
        padding-right: 1px;
    }
</style>
