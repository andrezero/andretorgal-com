---
export type TagLinkSize = 'large' | 'medium' | 'normal' | 'compact' | 'tiny' | undefined;

export type Props = {
    tag: string;
    count?: number;
    size?: TagLinkSize;
    nolink?: boolean;
};

const { tag, count = 0, size = 'normal', nolink } = Astro.props;

const Element = nolink ? 'span' : 'a';
const props = nolink ? {} : { href: `/tags/${tag}` };
---

<Element class:list={['tag', size, { 'has-link': !nolink }]} {...props}>
    #{tag}
    {
        count > 0 && (
            <span class="count">
                <span>(</span>
                {count}
                <span>)</span>
            </span>
        )
    }
</Element>

<style>
    .tag {
        display: flex;
        align-items: baseline;
        gap: var(--layout-s-quarter);
        padding: 0 var(--layout-s-quarter) var(--layout-shift);
        color: var(--scheme-bg);
        font-family: var(--t-type-family-alt);
        font-weight: var(--t-type-weight-alt-bold);
        background-color: var(--scheme-fg);
        border-radius: var(--radius-action);
        text-decoration: none;
        min-width: min-content;
        transition: color 0.1s, background-color 0.2s;
    }

    .large {
        font-size: var(--t-type-size-2);
    }

    .medium {
        font-size: var(--t-type-size-1);
    }

    .normal {
        font-size: var(--t-type-size-0);
    }

    .compact {
        font-size: var(--t-type-size--1);
    }

    .tiny {
        font-size: var(--t-type-size--2);
    }

    .count {
        display: inline-block;
        font-size: 85%;
        min-width: 1.35em;
        padding: 0 var(--layout-s-half);
        text-align: center;
        color: var(--scheme-fg);
        background-color: var(--scheme-bg);
        border-radius: 99px;
        transition: color 0.1s, background-color 0.2s;
    }

    .count span {
        display: none;
    }

    .tag::selection {
        color: var(--scheme-fg);
        background-color: var(--scheme-bg);
    }

    .count::selection {
        color: var(--scheme-fg);
        background-color: var(--scheme-bg);
    }

    .has-link:hover {
        color: var(--scheme-bg);
        background-color: var(--scheme-a-on);
    }

    .has-link:hover .count {
        color: var(--scheme-a-on);
    }

    .has-link:active {
        color: var(--scheme-fg);
        background-color: var(--scheme-bg);
    }

    .has-link:active .count {
        color: var(--scheme-bg);
        background-color: var(--scheme-fg);
    }

    @media print {
        .tag {
            color: var(--print-brand);
            background-color: transparent;
            padding: var(--layout-unit);
            border: var(--layout-shift) solid var(--print-edge);
        }
    }
</style>
