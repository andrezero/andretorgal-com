---
import Body from '@components/document/Body.astro';
import Document from '@components/document/Document.astro';
import Head from '@components/document/Head.astro';
import Layout from '@components/document/Layout.astro';
import NodeList from '@components/node/lists/NodeList.astro';
import Section from '@components/page/Section.astro';
import SectionHeader from '@components/page/SectionHeader.astro';
import SiteFooter from '@components/site/SiteFooter.astro';
import SiteHeader from '@components/site/SiteHeader.astro';
import SiteMain from '@components/site/SiteMain.astro';
import type { AstroNode, BlogPost } from '@queries/types';
import TopLine from '~/components/page/TopLine.astro';

export interface Props {
    content: BlogPost;
}

const { content: node } = Astro.props;

const posts = (await Astro.glob<AstroNode<BlogPost>>('../pages/posts/**/*.{md,mdx}')).sort(
    (a, b) =>
        new Date(b.frontmatter.published).valueOf() - new Date(a.frontmatter.published).valueOf(),
);
---

<Document>
    <Head node={node} />
    <Body>
        <Layout>
            <SiteHeader slot="header" />
            <SiteMain slot="main">
                <Section>
                    <SectionHeader node={node} />
                    <TopLine />
                    <NodeList nodes={posts} />
                </Section>
            </SiteMain>
            <SiteFooter slot="footer" />
        </Layout>
    </Body>
</Document>
