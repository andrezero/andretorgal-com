---
import Body from '@components/document/Body.astro';
import Document from '@components/document/Document.astro';
import Head from '@components/document/Head.astro';
import Layout from '@components/document/Layout.astro';
import NodeAbstract from '@components/node/parts/NodeAbstract.astro';
import NodeList from '@components/node/lists/NodeList.astro';
import NodeMeta from '@components/node/parts/NodeMeta.astro';
import Article from '@components/page/Article.astro';
import ArticleHeader from '@components/page/ArticleHeader.astro';
import PageSubTitle from '@components/page/PageSubTitle.astro';
import PageTitle from '@components/page/PageTitle.astro';
import Markup from '@components/page/Markup.astro';
import SiteFooter from '@components/site/SiteFooter.astro';
import SiteHeader from '@components/site/SiteHeader.astro';
import SiteMain from '@components/site/SiteMain.astro';
import type { AstroNode, BaseNode, TagNode } from '@queries/types';

export interface Props {
    content: TagNode;
}

const { content: page } = Astro.props;

const allNodes = await Astro.glob<AstroNode<BaseNode>>('../**/*.{md,mdx}');

const nodes = allNodes.filter(n => n.frontmatter.tags?.includes(page.title));
---

<Document>
    <Head node={page} />
    <Body>
        <Layout>
            <SiteHeader slot="header" />
            <SiteMain slot="main">
                <Article>
                    <ArticleHeader node={page} override>
                        <PageTitle
                            ><span aria-hidden="true">{nodes.length}</span> #{page.title}</PageTitle
                        >
                    </ArticleHeader>
                    <NodeAbstract node={page} />
                    <Markup><slot /></Markup>
                    <NodeMeta node={page} />
                </Article>
                <PageSubTitle>All {nodes.length} items under #{page.title}</PageSubTitle>
                <NodeList nodes={nodes} />
            </SiteMain>
            <SiteFooter slot="footer" />
        </Layout>
    </Body>
</Document>
