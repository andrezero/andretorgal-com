---
import Body from '@components/document/Body.astro';
import Document from '@components/document/Document.astro';
import Head from '@components/document/Head.astro';
import Layout from '@components/document/Layout.astro';
import NodeList from '@components/node/lists/NodeList.astro';
import NodeAbstract from '@components/node/parts/NodeAbstract.astro';
import NodeMeta from '@components/node/parts/NodeMeta.astro';
import Article from '@components/page/Article.astro';
import ArticleHeader from '@components/page/ArticleHeader.astro';
import Divider from '@components/page/Divider.astro';
import Markup from '@components/page/Markup.astro';
import PageSubTitle from '@components/page/PageSubTitle.astro';
import PageTitle from '@components/page/PageTitle.astro';
import Section from '@components/page/Section.astro';
import TopLine from '@components/page/TopLine.astro';
import SiteFooter from '@components/site/SiteFooter.astro';
import SiteHeader from '@components/site/SiteHeader.astro';
import SiteMain from '@components/site/SiteMain.astro';
// import { importAllNodes, sortedNodes } from '@queries/nodes';
import { sortedNodes } from '@queries/nodes';
import type { BaseNode, TagNode } from '@queries/types';
import { plural } from '@utils/strings';

export type Props = {
    content: TagNode;
};

const { content: page } = Astro.props;

const allNodes: BaseNode[] = []; // WIP await importAllNodes();

const nodes = sortedNodes(allNodes.filter(n => n.tags?.includes(page.title)));
const pages = nodes.filter(n => n.type === 'page');
const posts = nodes.filter(n => n.type === 'post');
const tags = nodes.filter(n => n.type === 'tag');
const meta = nodes.filter(n => n.type.startsWith('meta'));
---

<Document>
    <Head node={page} />
    <Body>
        <Layout>
            <SiteHeader slot="header" />
            <SiteMain slot="main">
                <Article>
                    <ArticleHeader node={page} slot="header" override noDate>
                        <PageTitle>
                            #{page.title}
                        </PageTitle>
                    </ArticleHeader>
                    <Section>
                        <TopLine />
                        <NodeAbstract node={page} />
                        <NodeMeta node={page} noDate />
                        <Markup><slot /></Markup>
                    </Section>
                    <Section>
                        {
                            pages.length > 0 && (
                                <>
                                    <Divider size="gap">
                                        <PageSubTitle>
                                            {pages.length}&nbsp;{plural(pages.length, 'page')} under
                                            #{page.title}
                                        </PageSubTitle>
                                    </Divider>
                                    <NodeList nodes={pages} />
                                </>
                            )
                        }
                        {
                            posts.length > 0 && (
                                <>
                                    <Divider size="space">
                                        <PageSubTitle>
                                            {posts.length}&nbsp;{plural(posts.length, 'post')} under
                                            #{page.title}
                                        </PageSubTitle>
                                    </Divider>
                                    <NodeList nodes={posts} variant="compact" />
                                </>
                            )
                        }
                        {
                            tags.length > 0 && (
                                <>
                                    <Divider size="space">
                                        <PageSubTitle>
                                            {tags.length}&nbsp;{plural(tags.length, 'tag')} under #
                                            {page.title}
                                        </PageSubTitle>
                                    </Divider>
                                    <NodeList nodes={tags} variant="compact" />
                                </>
                            )
                        }
                        {
                            meta.length > 0 && (
                                <>
                                    <Divider size="space">
                                        <PageSubTitle>
                                            {meta.length}&nbsp;{plural(meta.length, 'meta doc')}{' '}
                                            under #{page.title}
                                        </PageSubTitle>
                                    </Divider>
                                    <NodeList nodes={meta} />
                                </>
                            )
                        }
                    </Section>
                </Article>
            </SiteMain>
            <SiteFooter slot="footer" />
        </Layout>
    </Body>
</Document>
