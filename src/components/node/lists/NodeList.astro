---
import type { BaseNode } from '@queries/types';
import NodeListItem from './NodeListItem.astro';
import NodeListThumb from './NodeListThumb.astro';

type ListVariant = 'default' | 'thumbs';

export type Props = {
    nodes: BaseNode[];
    variant?: ListVariant;
};

const { nodes, variant = 'default' } = Astro.props;
---

<ul class:list={[variant]}>
    {
        nodes.map(node => (
            <li>
                {variant === 'default' && <NodeListItem node={node} />}
                {variant === 'thumbs' && <NodeListThumb node={node} />}
            </li>
        ))
    }
</ul>

<style>
    ul,
    li {
        display: flex;
        flex-direction: column;
    }

    ul {
        gap: var(--layout-space);
    }

    .thumbs {
        display: grid;
        column-gap: var(--layout-gap);
        row-gap: var(--layout-space);
    }

    @media screen and (min-width: 650px) {
        .thumbs {
            grid-template-columns: 50% 50%;
        }
    }

    li {
        gap: var(--t-space-2xs);
    }

    p {
        font-size: var(--t-type-size-1);
    }
</style>
