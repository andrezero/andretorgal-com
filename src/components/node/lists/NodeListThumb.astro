---
import type { BaseNode } from '@queries/types';

import { getThumbImage } from '@integration/images/utils/getThumbImage';

import NodeAbstract from '../parts/NodeAbstract.astro';
import NodeDate from '../parts/NodeDate.astro';
import NodeTags from '../parts/NodeTags.astro';
import NodeThumb from '../parts/NodeThumb.astro';
import TagLink from '../parts/TagLink.astro';

export type Props = {
    node: BaseNode;
    compact?: boolean;
};

const { node } = Astro.props;
const { imageBaseDir, mdxFilename, ogImage, images } = node;

const thumbImage = getThumbImage(imageBaseDir, mdxFilename, ogImage, images);
---

<article>
    <header>
        {(<NodeDate size="s" node={node} />)}
        <h4>
            {
                node.type === 'tag' ? (
                    <TagLink tag={node.title}>{node.title}</TagLink>
                ) : (
                    <a href={node.url}>{node.title}</a>
                )
            }
        </h4>
    </header>
    {
        thumbImage ? (
            <a href={node.url}>
                <NodeThumb node={node} />
            </a>
        ) : (
            <NodeAbstract node={node} />
        )
    }
    <NodeTags node={node} compact />
</article>

<style>
    article {
        display: flex;
        flex-direction: column;
        gap: var(--t-space-xs);
    }

    header {
        display: flex;
        flex-direction: column-reverse;
        gap: var(--t-space-2xs);
    }

    h4 {
        display: flex;
        height: 2.5em;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    div {
        display: flex;
        gap: var(--layout-gap);
        flex-direction: column;
    }

    @media screen and (min-width: 650px) {
        div {
            display: grid;
            grid-template-columns: 50% auto;
        }
    }

    p {
        font-size: var(--t-type-size-0);
    }
</style>
