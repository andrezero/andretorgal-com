---
import { Figure } from '@components/mdx';
import { getNodeHeroImage, getNodeImage, type BaseNode } from '@nodes/index';

export type Props = {
    node: BaseNode;
};

const { node } = Astro.props;
const heroImage = getNodeHeroImage(node);
const src = heroImage && getNodeImage(node, heroImage.src);
---

<div class="hero">
    {heroImage && src && <Figure {...heroImage} src={src()} width={1400} />}
</div>

<style is:global>
    .hero {
        --hero-width: 101vw;
        margin-bottom: var(--layout-gap);
    }

    @media screen {
        .hero .block {
            position: relative;
            width: auto;
            max-width: initial;
            width: var(--hero-width);
            min-width: var(--hero-width);
            max-width: var(--hero-width);
            min-height: 100%;
            max-height: 100%;
            margin-left: calc(-1 * var(--layout-gutter));
        }
    }

    @media screen and (min-width: 650px) {
        .hero .block {
            margin-left: calc(-1 * (100vw - var(--layout-container-width)) / 2);
        }
    }

    @media screen and (min-width: 1060px) {
        .hero {
            --hero-width: calc(100vw - var(--layout-col-1) - var(--layout-gap));
        }

        .hero .block {
            margin-left: calc(-1 * var(--layout-gutter));
        }
    }

    @media screen and (min-width: 1420px) {
        .hero .block {
            --hero-width: calc(
                101vw - var(--layout-col-1) - var(--layout-bi-col-2) + var(--layout-space)
            );
        }

        .hero .figure picture img {
            max-height: 800px;
            object-fit: cover;
        }
    }
</style>
