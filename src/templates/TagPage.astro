---
import { Body, Document, Head, Layout } from '@components/document';
import { NodeAbstract, NodeList, NodeMeta } from '@components/node';
import {
    Article,
    ArticleHeader,
    Divider,
    Markup,
    PageSubTitle,
    PageTitle,
    Section,
    SubscribeToFeed,
    TopLine,
} from '@components/page';
import { SiteFooter, SiteHeader, SiteMain } from '@components/site';
import { fetchAllNodes, sortNodes, type TagNode } from '@nodes/index';
import { plural } from '@utils/strings';
export type Props = {
    content: TagNode;
};

const { content: page } = Astro.props;

const allNodes = await fetchAllNodes();

const nodes = sortNodes(allNodes.filter(n => n.tags?.includes(page.title)));
const pages = nodes.filter(n => n.type === 'page');
const posts = nodes.filter(n => n.type === 'post');
const tags = nodes.filter(n => n.type === 'tag');
const meta = nodes.filter(n => n.type.startsWith('meta'));
---

<Document>
    <Head node={page} />
    <Body>
        <Layout>
            <SiteHeader slot="header" />
            <SiteMain slot="main">
                <Article>
                    <ArticleHeader node={page} slot="header" override noDate>
                        <PageTitle>
                            #{page.title}
                        </PageTitle>
                        <SubscribeToFeed title={`#${page.title}`} url={page.url} />
                    </ArticleHeader>
                    <Section>
                        <TopLine />
                        <NodeAbstract node={page} />
                        <NodeMeta node={page} noDate />
                        <Markup><slot /></Markup>
                    </Section>
                    <Section>
                        {
                            pages.length > 0 && (
                                <>
                                    <Divider size="gap">
                                        <PageSubTitle>
                                            {pages.length}&nbsp;{plural(pages.length, 'page')} under
                                            #{page.title}
                                        </PageSubTitle>
                                    </Divider>
                                    <NodeList nodes={pages} variant="mini" />
                                </>
                            )
                        }
                        {
                            posts.length > 0 && (
                                <>
                                    <Divider size="space">
                                        <PageSubTitle>
                                            {posts.length}&nbsp;{plural(posts.length, 'post')} under
                                            #{page.title}
                                        </PageSubTitle>
                                    </Divider>
                                    <NodeList nodes={posts} variant="mini" />
                                </>
                            )
                        }
                        {
                            tags.length > 0 && (
                                <>
                                    <Divider size="space">
                                        <PageSubTitle>
                                            {tags.length}&nbsp;{plural(tags.length, 'tag')} under #
                                            {page.title}
                                        </PageSubTitle>
                                    </Divider>
                                    <NodeList nodes={tags} variant="mini" />
                                </>
                            )
                        }
                        {
                            meta.length > 0 && (
                                <>
                                    <Divider size="space">
                                        <PageSubTitle>
                                            {meta.length}&nbsp;{plural(meta.length, 'meta doc')}{' '}
                                            under #{page.title}
                                        </PageSubTitle>
                                    </Divider>
                                    <NodeList nodes={meta} />
                                </>
                            )
                        }
                    </Section>
                </Article>
            </SiteMain>
            <SiteFooter slot="footer" />
        </Layout>
    </Body>
</Document>
