---
import { Body, Document, Head, Layout } from '@components/document';
import { NodeAbstract, NodeList, NodeMeta } from '@components/node';
import {
    Article,
    ArticleHeader,
    Divider,
    Markup,
    PageSubTitle,
    PageTitle,
    Section,
    SubscribeToFeed,
    TopLine,
} from '@components/page';
import { SiteFooter, SiteHeader, SiteMain } from '@components/site';
import { fetchAllNodes, sortNodes, type TagNode } from '@nodes/index';
import { plural } from '@utils/strings';
export type Props = {
    content: TagNode;
};

const { content: tag } = Astro.props;

const allNodes = await fetchAllNodes();

const nodes = sortNodes(allNodes.filter(n => n.tags?.includes(tag.title)));
const pages = nodes.filter(n => n.type === 'page');
const posts = nodes.filter(n => n.type === 'post');
const tags = nodes.filter(n => n.type === 'tag');
const meta = nodes.filter(n => n.type.startsWith('meta'));
---

<Document>
    <Head node={tag} />
    <Body>
        <Layout>
            <SiteHeader slot="header" />
            <SiteMain slot="main">
                <Article>
                    <ArticleHeader node={tag} slot="header" override noDate>
                        <PageTitle>
                            #{tag.title}
                        </PageTitle>
                        <SubscribeToFeed title={`#${tag.title}`} url={tag.url} />
                    </ArticleHeader>
                    <Section>
                        <TopLine />
                        <NodeAbstract node={tag} />
                        <NodeMeta node={tag} noDate />
                        <Markup><slot /></Markup>
                    </Section>

                    {
                        pages.length > 0 && (
                            <Section>
                                <Divider size="gap">
                                    <PageSubTitle>
                                        {pages.length}&nbsp;{plural(pages.length, 'page')} under #
                                        {tag.title}
                                    </PageSubTitle>
                                </Divider>
                                <NodeList nodes={pages} variant="mini" />
                            </Section>
                        )
                    }
                    {
                        posts.length > 0 && (
                            <Section>
                                <Divider size="space" />
                                <PageSubTitle>
                                    {posts.length}&nbsp;{plural(posts.length, 'post')} under #
                                    {tag.title}
                                </PageSubTitle>
                                <NodeList nodes={posts} variant="mini" />
                            </Section>
                        )
                    }
                    {
                        tags.length > 0 && (
                            <Section>
                                <Divider size="space" />
                                <PageSubTitle>
                                    {tags.length}&nbsp;{plural(tags.length, 'tag')} under #
                                    {tag.title}
                                </PageSubTitle>
                                <NodeList nodes={tags} variant="mini" />
                            </Section>
                        )
                    }
                    {
                        meta.length > 0 && (
                            <Section>
                                <Divider size="space" />
                                <PageSubTitle>
                                    {meta.length}&nbsp;{plural(meta.length, 'meta doc')} under #
                                    {tag.title}
                                </PageSubTitle>
                                <NodeList nodes={meta} />
                            </Section>
                        )
                    }
                </Article>
            </SiteMain>
            <SiteFooter slot="footer" />
        </Layout>
    </Body>
</Document>
